[{"C:\\Users\\User\\Desktop\\dodo\\src\\components\\header\\index.js":"1","C:\\Users\\User\\Desktop\\dodo\\src\\App.js":"2","C:\\Users\\User\\Desktop\\dodo\\src\\components\\pizzas\\index.js":"3","C:\\Users\\User\\Desktop\\dodo\\src\\pages\\home.jsx":"4","C:\\Users\\User\\Desktop\\dodo\\src\\components\\menu\\index.js":"5","C:\\Users\\User\\Desktop\\dodo\\src\\components\\hero\\index.js":"6"},{"size":2547,"mtime":1606796167000,"results":"7","hashOfConfig":"8"},{"size":529,"mtime":1606827731000,"results":"9","hashOfConfig":"8"},{"size":2510,"mtime":1606928404646,"results":"10","hashOfConfig":"8"},{"size":214,"mtime":1606928626169,"results":"11","hashOfConfig":"8"},{"size":1022,"mtime":1606928368873,"results":"12","hashOfConfig":"8"},{"size":1316,"mtime":1606928303298,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3leah5",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Desktop\\dodo\\src\\components\\header\\index.js",["26"],"C:\\Users\\User\\Desktop\\dodo\\src\\App.js",["27","28"],"C:\\Users\\User\\Desktop\\dodo\\src\\components\\pizzas\\index.js",[],"C:\\Users\\User\\Desktop\\dodo\\src\\pages\\home.jsx",[],"C:\\Users\\User\\Desktop\\dodo\\src\\components\\menu\\index.js",["29","30"],"C:\\Users\\User\\Desktop\\dodo\\src\\components\\hero\\index.js",["31","32","33","34","35"],{"ruleId":"36","severity":1,"message":"37","line":7,"column":9,"nodeType":"38","messageId":"39","endLine":7,"endColumn":20},{"ruleId":"36","severity":1,"message":"40","line":11,"column":5,"nodeType":"38","messageId":"39","endLine":11,"endColumn":9},{"ruleId":"41","severity":1,"message":"42","line":11,"column":12,"nodeType":"43","endLine":11,"endColumn":36},{"ruleId":"36","severity":1,"message":"44","line":8,"column":7,"nodeType":"38","messageId":"39","endLine":8,"endColumn":11},{"ruleId":"41","severity":1,"message":"45","line":9,"column":13,"nodeType":"46","endLine":14,"endColumn":4},{"ruleId":"47","severity":1,"message":"48","line":14,"column":13,"nodeType":"49","endLine":14,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":19,"column":13,"nodeType":"49","endLine":19,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":24,"column":13,"nodeType":"49","endLine":24,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":29,"column":13,"nodeType":"49","endLine":29,"endColumn":47},{"ruleId":"47","severity":1,"message":"48","line":34,"column":13,"nodeType":"49","endLine":34,"endColumn":47},"no-unused-vars","'classTogler' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'path' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'aiza' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]